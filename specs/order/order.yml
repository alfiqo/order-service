openapi: "3.0.2"
info:
  title: Orders
  description: API for Order Resource
  version: "1.0"
servers:
  - url: http://localhost:8080/api/v1
paths:
  /orders:
    get:
      tags:
        - Order
      summary: "Get All Order"
      parameters:
        - in: "query"
          name: "page"
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - in: query
          name: "perPage"
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
        - in: query
          name: "search"
          description: "Search by email or name"
          required: false
          schema:
            type: string
          examples:
            name:
              value: "jhon doe"
            email:
              value: "jhon@example.com"
      responses:
        "200":
          description: "Get All Order Response"
          content:
            application/json:
              examples:
                success:
                  description: "Success Response"
                failed:
                  description: "Data Not Found"
                  value:
                    code: 200
                    message: "success"
                    meta:
                      page: 1
                      perPage: 10
                      maxPage: 1
                      totalData: 0
                    data: []
              schema:
                $ref: "#/components/schemas/orderListReponse"
    post:
      tags:
        - Order
      summary: "Create a new order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOrUpdateOrder"
      responses:
        "200":
          description: "Success Create Order Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orderResponse"

  /orders/{id}:
    get:
      tags:
        - Order
      summary: "Get Order By ID"
      parameters:
        - $ref: "#/components/parameters/orderIdInPath"
      responses:
        "200":
          description: "Success Get Order By ID Response"
          content:
            application/json:
              examples:
                success:
                  description: "Success Response"
                failed:
                  description: "Data Not Found"
                  value:
                    code: 404
                    message: data not found
                    data: null
              schema:
                $ref: "#/components/schemas/orderResponse"
    put:
      tags:
        - Order
      summary: "Update Order By ID"
      parameters:
        - $ref: "#/components/parameters/orderIdInPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOrUpdateOrder"
      responses:
        "200":
          description: "Success Update Order Response"
          content:
            application/json:
              examples:
                success:
                  description: "Success Response"
                failed:
                  description: "Data Not Found"
                  value:
                    code: 404
                    message: "data not found"
                    data: null
              schema:
                $ref: "#/components/schemas/orderResponse"
    delete:
      tags:
        - Order
      summary: "Delete Order By ID"
      parameters:
        - $ref: "#/components/parameters/orderIdInPath"
      responses:
        "200":
          description: OK
          content:
            application/json:
              examples:
                success:
                  description: "Success Response"
                failed:
                  description: "Data Not Found"
                  value:
                    code: 404
                    message: "data not found"
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success

components:
  parameters:
    orderIdInPath:
      in: path
      name: "id"
      required: true
      schema:
        type: integer

  schemas:
    meta:
      type: object
      properties:
        page:
          type: integer
          example: 1
        perPage:
          type: integer
          example: 10
        maxPage:
          type: integer
          example: 5
        totalData:
          type: integer
          example: 50

    order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        orderNumber:
          type: string
        merchantId:
          type: integer
          example: 1
        productId:
          type: integer
          example: 1
        qty:
          type: integer
          example: 2
        price:
          type: integer
          example: 10000
        discount:
          type: number
          example: 5000
        status:
          type: string
          example: "unpaid"

    createOrUpdateOrder:
      type: object
      properties:
        merchantId:
          type: integer
          example: 1
        productId:
          type: integer
          example: 1
        qty:
          type: integer
          example: 2
        price:
          type: integer
          example: 10000
        discount:
          type: number
          example: 5000
        status:
          type: string
          example: "unpaid"
      required:
        - merchantId
        - productId
        - qty
        - price

    orderListReponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: "success"
        meta:
          $ref: "#/components/schemas/meta"
        data:
          type: array
          items:
            $ref: "#/components/schemas/order"

    orderResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          $ref: "#/components/schemas/order"
